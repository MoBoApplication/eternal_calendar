plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'dagger.hilt.android.plugin'
  id 'org.jetbrains.kotlin.plugin.compose'
  id "com.google.devtools.ksp"
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionIncrement = 0

android {
  namespace 'com.dunghn2201.eternalcalendar'
  compileSdk 34

  defaultConfig {
    applicationId "com.dunghn2201.eternalcalendar"
    minSdk 26
    targetSdk 34
    versionCode versionMajor * 100000 + versionMinor * 1000 + versionPatch * 100 + versionIncrement
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables {
      useSupportLibrary true
    }
  }

  signingConfigs {
    debug {
      keyAlias 'androiddebugkey'
      keyPassword 'android'
      storeFile file('debug.keystore')
      storePassword 'android'
    }
  }

  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.debug
    }

    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      ndk {
        debugSymbolLevel 'SYMBOL_TABLE'
      }
    }
  }
  flavorDimensions = ["version"]
  productFlavors {
    def APP_NAME = "APP_NAME"
    develop {
      def version_name_ext = System.getenv("VERSION_NAME_EXT")
      def app_name = "[Dev]lichvannien"
      if (version_name_ext) {
        versionNameSuffix "-develop-$version_name_ext"
      } else {
        versionNameSuffix "-develop"
      }
      dimension "version"
      buildConfigField "String", APP_NAME, "\"${app_name}\""
      manifestPlaceholders["appName"] = app_name
    }
    staging {
      dimension "version"
      def version_name_ext = System.getenv('VERSION_NAME_EXT')
      def app_name = "[Staging]lichvannien"
      if (version_name_ext) {
        versionNameSuffix "-staging-$version_name_ext"
      } else {
        versionNameSuffix "-staging"
      }
      buildConfigField "String", APP_NAME, "\"${app_name}\""
      manifestPlaceholders["appName"] = app_name
    }
    production {
      def tag_name = System.getenv('TAG_NAME')
      def app_name = "lichvannien"
      if (tag_name) {
        def versions = tag_name.replace('v', '').split("-")
        versionCode versions[1].toInteger()
        versionName "${versions[0]}"
      }
      dimension "version"
      buildConfigField "String", APP_NAME, "\"${app_name}\""
      manifestPlaceholders["appName"] = app_name
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  buildFeatures {
    buildConfig true
    compose true
  }
  composeOptions {
    kotlinCompilerExtensionVersion '1.5.15'
  }
  packagingOptions {
    resources {
      excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
  }

  sourceSets {
    develop.java.srcDirs = ["src/app/java"]
    staging.java.srcDirs = ["src/app/java"]
    production.java.srcDirs = ["src/app/java"]
  }

  // Package attribute in manifest file is deprecated
  // Official document: https://developer.android.com/studio/releases/gradle-plugin#package-deprecated
  namespace 'com.dunghn2201.eternalcalendar'

  applicationVariants.configureEach { variant ->
    def localProperties = new Properties()
    def propertiesFile = rootProject.file("local.properties")
    // Skipped because local.properties does not exist on CI
    if (!propertiesFile.exists()) return
    propertiesFile.withInputStream { localProperties.load(it) }
  }
}

dependencies {

  implementation 'androidx.core:core-ktx:1.13.1'
  implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.5'
  implementation 'androidx.activity:activity-compose:1.9.2'
  implementation "androidx.compose.ui:ui:$compose_ui_version"
  implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
  implementation 'com.google.android.material:material:1.12.0'
  testImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.test.ext:junit:1.2.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
  androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
  debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
  debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

  //==================== Navigation ====================
  implementation "androidx.navigation:navigation-compose:$nav_version"
  implementation "com.google.accompanist:accompanist-navigation-animation:$nav_anim_version"
  implementation "com.google.accompanist:accompanist-systemuicontroller:0.31.0-alpha"

  //==================== Dependency Injection ====================
  implementation "com.google.dagger:hilt-android:$hilt_version"
  ksp "com.google.dagger:hilt-compiler:$hilt_version"
  implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'
  implementation "androidx.hilt:hilt-work:1.2.0"

  //==================== Logging ====================
  implementation "com.jakewharton.timber:timber:5.0.1"

  //==================== Constraint Layout ====================
  implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

  //==================== Work Manager ====================
  implementation "androidx.work:work-runtime-ktx:$work_version"

  //==================== Work Manager ====================
  implementation 'io.sentry:sentry-android:6.17.0'

  implementation "io.github.vanpra.compose-material-dialogs:datetime:$dialogs_version"

  implementation "com.chargemap.compose:numberpicker:1.0.3"

  //==================== Moshi ====================
  ksp "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
  implementation "com.squareup.moshi:moshi:$moshi_version"
  implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
  implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
}
