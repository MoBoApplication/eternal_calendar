name: Build Pull Request Production Environment

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ master ]

jobs:
  setup:
    name: Setup Env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v2


  spotless:
    name: Run Spotless Check Code
    needs: [ setup ]
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: gradle/gradle-build-action@v2

      - name: Run Spotless
        run: ./gradlew spotlessCheck

  unit_test:
    name: Run Unit test
    needs: [ spotless ]
    uses: ./.github/workflows/unit_test.yml
    secrets: inherit

  build:
    name: Build android app bundle
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ unit_test ]
    steps:
      - uses: actions/checkout@v3

      # ./gradlew bundleProductionRelease cache is not generated when pushing to develop, so
      # enable writing to cache without specifying read-only
      - uses: gradle/gradle-build-action@v2
        with:
          read-only: false

      - name: set tag name to environment
        run: echo "TAG_NAME=${{ inputs.tag }}" >> $GITHUB_ENV

      - name: Set up secret file
        env:
          DEBUG_PASSWORD: ${{ secrets.PROD_SIGNING_KEY }}
          DEBUG_SECRET_KEY: ${{ secrets.KEY_ALIAS }}
        run: |
          echo $DEBUG_PASSWORD >> secrets.txt
          echo $DEBUG_SECRET_KEY >> secrets.txt

      - name: Sign android app bundle
        run: ./gradlew bundleProductionRelease

      - uses: r0adkll/sign-android-release@v1
        name: Sign app bundle
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/bundle/productionRelease
          signingKeyBase64: ${{ secrets.PROD_SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.PROD_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.PROD_KEYSTORE_PASSWORD }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AAB_PATH: app/build/outputs/bundle/productionRelease
        run: |
          mv ${{ env.AAB_PATH }}/app-production-release.aab \
            ${{ env.AAB_PATH }}/app-production-release-${{ env.TAG_NAME }}.aab
          echo 'RELEASE_URL<<EOF' >> $GITHUB_ENV
          gh release create ${{ env.TAG_NAME }} \
            --generate-notes \
            ${{ env.AAB_PATH }}/app-production-release-${{ env.TAG_NAME }}.aab \
            app/build/outputs/mapping/productionRelease/mapping.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
